{"version":3,"sources":["webpack:///./src/vendor/Export2Excel.js"],"names":["generateArray","table","out","rows","querySelectorAll","ranges","R","length","outRow","row","columns","C","cell","colspan","getAttribute","rowspan","cellValue","innerText","forEach","range","s","r","e","c","i","push","k","datenum","v","date1904","epoch","Date","parse","UTC","sheet_from_array_of_arrays","data","opts","ws","cell_ref","XLSX","utils","encode_cell","t","z","SSF","_table","encode_range","Workbook","this","SheetNames","Sheets","s2ab","buf","ArrayBuffer","view","Uint8Array","charCodeAt","export_table_to_excel","id","theTable","document","getElementById","oo","ws_name","wb","wbout","write","bookType","bookSST","type","saveAs","Blob","export_json_to_excel","multiHeader","header","filename","merges","autoWidth","unshift","item","decode_range","colWidth","map","val","toString","result","j"],"mappings":"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","file":"static/js/chunk-2133cd4f.6b491317.js","sourcesContent":["/* eslint-disable */\nimport { saveAs } from 'file-saver'\nimport XLSX from 'xlsx'\n\nfunction generateArray(table) {\n  var out = [];\n  var rows = table.querySelectorAll('tr');\n  var ranges = [];\n  for (var R = 0; R < rows.length; ++R) {\n    var outRow = [];\n    var row = rows[R];\n    var columns = row.querySelectorAll('td');\n    for (var C = 0; C < columns.length; ++C) {\n      var cell = columns[C];\n      var colspan = cell.getAttribute('colspan');\n      var rowspan = cell.getAttribute('rowspan');\n      var cellValue = cell.innerText;\n      if (cellValue !== \"\" && cellValue == +cellValue) cellValue = +cellValue;\n\n      //Skip ranges\n      ranges.forEach(function (range) {\n        if (R >= range.s.r && R <= range.e.r && outRow.length >= range.s.c && outRow.length <= range.e.c) {\n          for (var i = 0; i <= range.e.c - range.s.c; ++i) outRow.push(null);\n        }\n      });\n\n      //Handle Row Span\n      if (rowspan || colspan) {\n        rowspan = rowspan || 1;\n        colspan = colspan || 1;\n        ranges.push({\n          s: {\n            r: R,\n            c: outRow.length\n          },\n          e: {\n            r: R + rowspan - 1,\n            c: outRow.length + colspan - 1\n          }\n        });\n      };\n\n      //Handle Value\n      outRow.push(cellValue !== \"\" ? cellValue : null);\n\n      //Handle Colspan\n      if (colspan)\n        for (var k = 0; k < colspan - 1; ++k) outRow.push(null);\n    }\n    out.push(outRow);\n  }\n  return [out, ranges];\n};\n\nfunction datenum(v, date1904) {\n  if (date1904) v += 1462;\n  var epoch = Date.parse(v);\n  return (epoch - new Date(Date.UTC(1899, 11, 30))) / (24 * 60 * 60 * 1000);\n}\n\nfunction sheet_from_array_of_arrays(data, opts) {\n  var ws = {};\n  var range = {\n    s: {\n      c: 10000000,\n      r: 10000000\n    },\n    e: {\n      c: 0,\n      r: 0\n    }\n  };\n  for (var R = 0; R != data.length; ++R) {\n    for (var C = 0; C != data[R].length; ++C) {\n      if (range.s.r > R) range.s.r = R;\n      if (range.s.c > C) range.s.c = C;\n      if (range.e.r < R) range.e.r = R;\n      if (range.e.c < C) range.e.c = C;\n      var cell = {\n        v: data[R][C]\n      };\n      if (cell.v == null) continue;\n      var cell_ref = XLSX.utils.encode_cell({\n        c: C,\n        r: R\n      });\n\n      if (typeof cell.v === 'number') cell.t = 'n';\n      else if (typeof cell.v === 'boolean') cell.t = 'b';\n      else if (cell.v instanceof Date) {\n        cell.t = 'n';\n        cell.z = XLSX.SSF._table[14];\n        cell.v = datenum(cell.v);\n      } else cell.t = 's';\n\n      ws[cell_ref] = cell;\n    }\n  }\n  if (range.s.c < 10000000) ws['!ref'] = XLSX.utils.encode_range(range);\n  return ws;\n}\n\nfunction Workbook() {\n  if (!(this instanceof Workbook)) return new Workbook();\n  this.SheetNames = [];\n  this.Sheets = {};\n}\n\nfunction s2ab(s) {\n  var buf = new ArrayBuffer(s.length);\n  var view = new Uint8Array(buf);\n  for (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n  return buf;\n}\n\nexport function export_table_to_excel(id) {\n  var theTable = document.getElementById(id);\n  var oo = generateArray(theTable);\n  var ranges = oo[1];\n\n  /* original data */\n  var data = oo[0];\n  var ws_name = \"SheetJS\";\n\n  var wb = new Workbook(),\n    ws = sheet_from_array_of_arrays(data);\n\n  /* add ranges to worksheet */\n  // ws['!cols'] = ['apple', 'banan'];\n  ws['!merges'] = ranges;\n\n  /* add worksheet to workbook */\n  wb.SheetNames.push(ws_name);\n  wb.Sheets[ws_name] = ws;\n\n  var wbout = XLSX.write(wb, {\n    bookType: 'xlsx',\n    bookSST: false,\n    type: 'binary'\n  });\n\n  saveAs(new Blob([s2ab(wbout)], {\n    type: \"application/octet-stream\"\n  }), \"test.xlsx\")\n}\n\nexport function export_json_to_excel({\n  multiHeader = [],\n  header,\n  data,\n  filename,\n  merges = [],\n  autoWidth = true,\n  bookType = 'xlsx'\n} = {}) {\n  /* original data */\n  filename = filename || 'excel-list'\n  data = [...data]\n  data.unshift(header);\n\n  for (let i = multiHeader.length - 1; i > -1; i--) {\n    data.unshift(multiHeader[i])\n  }\n\n  var ws_name = \"SheetJS\";\n  var wb = new Workbook(),\n    ws = sheet_from_array_of_arrays(data);\n\n  if (merges.length > 0) {\n    if (!ws['!merges']) ws['!merges'] = [];\n    merges.forEach(item => {\n      ws['!merges'].push(XLSX.utils.decode_range(item))\n    })\n  }\n\n  if (autoWidth) {\n    /*设置worksheet每列的最大宽度*/\n    const colWidth = data.map(row => row.map(val => {\n      /*先判断是否为null/undefined*/\n      if (val == null) {\n        return {\n          'wch': 10\n        };\n      }\n      /*再判断是否为中文*/\n      else if (val.toString().charCodeAt(0) > 255) {\n        return {\n          'wch': val.toString().length * 2\n        };\n      } else {\n        return {\n          'wch': val.toString().length\n        };\n      }\n    }))\n    /*以第一行为初始值*/\n    let result = colWidth[0];\n    for (let i = 1; i < colWidth.length; i++) {\n      for (let j = 0; j < colWidth[i].length; j++) {\n        if (result[j]['wch'] < colWidth[i][j]['wch']) {\n          result[j]['wch'] = colWidth[i][j]['wch'];\n        }\n      }\n    }\n    ws['!cols'] = result;\n  }\n\n  /* add worksheet to workbook */\n  wb.SheetNames.push(ws_name);\n  wb.Sheets[ws_name] = ws;\n\n  var wbout = XLSX.write(wb, {\n    bookType: bookType,\n    bookSST: false,\n    type: 'binary'\n  });\n  saveAs(new Blob([s2ab(wbout)], {\n    type: \"application/octet-stream\"\n  }), `${filename}.${bookType}`);\n}\n"],"sourceRoot":""}